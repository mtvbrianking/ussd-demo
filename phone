#!/usr/bin/env python3

from requests.exceptions import HTTPError
import argparse
import requests
import uuid
import sys
import os

def ussd(url, body):
    try:
        return requests.post(url, json=body, headers={'Accept': 'application/json'})
    except HTTPError as http_err:
        print(f'HTTP error occurred: {http_err}')
    except Exception as err:
        print(f'Other error occurred: {err}')

def clean(ussdCode):
    return ussdCode.lstrip('*').rstrip('#')

def validate(response):
    content = response.json();

    if response.status_code != 200:
        message = content['message']
        print(f'\nError ({response.status_code}): {message}')
        sys.exit(0);

    if content['flow'] == 'break':
        data = content['data']
        print(f'\n{data}')
        sys.exit(0);

def main():

    session_id = str(uuid.uuid4());

    parser = argparse.ArgumentParser(add_help=False, formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('--api_uri', help="API URI", type=str, default="http://localhost:8000/api", metavar='')
    parser.add_argument('--number', help="Phone number", type=str, default="+256772100104", metavar='')
    parser.add_argument('--network_code', help="Network code", type=str, default="6001", metavar='')
    parser.add_argument('--service_code', help="USSD shortcode", type=str, default="*308#", metavar='')
    parser.add_argument('--dail', help="User input", type=str, default="", metavar='')
    parser.add_argument('--session_id', help="Session ID", type=str, default=session_id, metavar='')
    parser.add_argument('--version', action='version', version='%(prog)s v1.0 by bmatovu', help="Show program's info")
    parser.add_argument('--help', action='help', default=argparse.SUPPRESS, help='Show usage')

    args = parser.parse_args()

    # ........................................................

    service_code = clean(args.service_code)

    dail = clean(args.dail)

    answer = clean(dail.replace(service_code, ''))

    body = {
        'session_id': args.session_id,
        'network_code': args.network_code,
        'phone_number': args.number,
        'input': dail,
        'service_code': service_code,
        'answer': answer
    }

    response = ussd(args.api_uri, body)

    validate(response)

    answer = input(response.json()['data'] + "\n")

    # ..................................

    while True:
        dail += "*" + answer

        body = {
            'session_id': args.session_id,
            'network_code': args.network_code,
            'phone_number': args.number,
            'input': dail,
            'service_code': service_code,
            'answer': answer
        }

        response = ussd(args.api_uri, body)

        validate(response)

        answer = input("\n" + response.json()['data'] + "\n")

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        print('Exiting...')
        try:
            sys.exit(0)
        except SystemExit:
            os._exit(0)
